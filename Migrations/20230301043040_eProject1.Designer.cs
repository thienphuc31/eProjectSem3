// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eProject1;

namespace eProject1.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230301043040_eProject1")]
    partial class eProject1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eProject1.Admin", b =>
                {
                    b.Property<string>("admin_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("admin_id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("eProject1.Bell", b =>
                {
                    b.Property<int>("bell_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bell_id");

                    b.HasIndex("employee_id");

                    b.ToTable("Bell");
                });

            modelBuilder.Entity("eProject1.Contact", b =>
                {
                    b.Property<int>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact_text")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("contact_title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("contact_id");

                    b.HasIndex("employee_id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("eProject1.Department", b =>
                {
                    b.Property<string>("department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("department_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("department_id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("eProject1.Employee", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("department_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("employee_DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("employee_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employee_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employee_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("employee_password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("employee_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employee_id");

                    b.HasIndex("department_id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("eProject1.EmployeeEvent", b =>
                {
                    b.Property<int>("EE_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employee_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("event_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("EE_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("event_id");

                    b.ToTable("EmployeeEvent");
                });

            modelBuilder.Entity("eProject1.Event", b =>
                {
                    b.Property<int>("event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("event_enddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("event_request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("event_startdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("event_id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("eProject1.News", b =>
                {
                    b.Property<int>("news_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("news_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("news_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("news_subtitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("news_text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("news_title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("news_id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("eProject1.Bell", b =>
                {
                    b.HasOne("eProject1.Employee", "employees")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("eProject1.Contact", b =>
                {
                    b.HasOne("eProject1.Employee", "employees")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("eProject1.Employee", b =>
                {
                    b.HasOne("eProject1.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("department_id");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("eProject1.EmployeeEvent", b =>
                {
                    b.HasOne("eProject1.Employee", "employees")
                        .WithMany("EmployeeEvents")
                        .HasForeignKey("employee_id");

                    b.HasOne("eProject1.Event", "events")
                        .WithMany("EmployeeEvents")
                        .HasForeignKey("event_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employees");

                    b.Navigation("events");
                });

            modelBuilder.Entity("eProject1.Employee", b =>
                {
                    b.Navigation("EmployeeEvents");
                });

            modelBuilder.Entity("eProject1.Event", b =>
                {
                    b.Navigation("EmployeeEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
